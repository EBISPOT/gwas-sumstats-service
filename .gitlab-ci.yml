image: docker:latest

stages:
  - build
  - deploy

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  CI_REGISTRY_IMAGE: ebispot/gwas-sumstats-service

  
# always build an image tagged with the commit SHA from master
build:
  stage: build
  script:
   - echo "$DOCKER_HUB_PASSWORD" > dhpw.txt
   - docker login -u "${DOCKER_HUB_USER}" --password-stdin < dhpw.txt docker.io
   - docker pull $CI_REGISTRY_IMAGE:latest
   - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
   - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  only:
   - master


# if a tag is created create an images with the tag and a latest
build_release:
  variables:
    GIT_STRATEGY: none
  stage: build
  script:
   - echo "$DOCKER_HUB_PASSWORD" > dhpw.txt
   - docker login -u "${DOCKER_HUB_USER}" --password-stdin < dhpw.txt
   - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
   - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
   - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
   - docker push $CI_REGISTRY_IMAGE:latest
   - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
   - tags


deploy_staging:
  image: dtzar/helm-kubectl:2.13.1
  stage: deploy
  script:
    - echo "Deploy to staging server"
    - mkdir -p /root/.kube
    - echo ${SANDBOX_KUBECONF} | base64 -d > /root/.kube/config
    - RABBITPWD=$(kubectl --namespace rabbitmq get secret rabbitmq -o jsonpath="{.data.rabbitmq-password}" | base64 -d)
    - helm init
    - helm delete --purge gwas-sumstats-service || true
    - helm install --name gwas-sumstats-service --set k8Namespace=gwas,image.repository=$CI_REGISTRY_IMAGE,image.tag=$CI_COMMIT_SHA,image.env.celeryUser=$RABBITUSER,image.env.celeryPwd=$RABBITPWD,image.env.validateSSH=false ./k8chart/ --wait
  environment:
    name: sandbox
  only:
    - master

deploy_fallback:
  image: dtzar/helm-kubectl:2.13.1
  stage: deploy
  script:
    - echo "Deploy to production fallback server"
    - mkdir -p /root/.kube
    - echo ${PFALLBACK_KUBECONFIG} | base64 -d > /root/.kube/config
    - RABBITPWD=$(kubectl --namespace rabbitmq get secret rabbitmq -o jsonpath="{.data.rabbitmq-password}" | base64 -d)
    - helm init
    - helm delete --purge gwas-sumstats-service || true
    - helm install --name gwas-sumstats-service --set k8Namespace=gwas,image.repository=$CI_REGISTRY_IMAGE,image.tag=$CI_COMMIT_SHA,image.env.celeryUser=$RABBITUSER,image.env.celeryPwd=$RABBITPWD,image.env.storagePath=$CI_STORAGE_PATH,image.env.computeFarmLogin=$CI_LOGIN_NODE,image.env.computeFarmUser=$CI_LOGIN_NODE_USERNAME,image.env.httpProxy=$HX_HTTP_PROXY,image.env.httpsProxy=$HX_HTTPS_PROXY ./k8chart/ --wait
  environment:
    name: fallback
  when: manual
  only:
    - tags
